console.log("Script add-bug.js was loaded");
console.log("-----------------");

//
// promptCourseInformation
//
function promptCourseInformation() {
  var courseInfo = prompt("Hit Ctrl+V to paste course information here.");

  if (courseInfo) {
    courseInfo = parseCourseInformation(courseInfo);
  }

  return courseInfo;
}

//
// parseCourseInformation
//
// @param text - the slide information that the user copied and pasted from
// the slide that is bugged
function parseCourseInformation(text) {
  var courseInfo = {
    slideInfo    : '',
    sectionTitle : ''
  };

  var splitText = text.split('---');

  courseInfo.slideInfo    = splitText[0].trim();
  courseInfo.sectionTitle = splitText[1].trim();

  return courseInfo;
}

//
// parseComponents
//
// @param slideID - the identification number that is copied
// and pasted from the help button inside of slides where
// bugs are identified. e.g. AD12-104-Web01-6-0-00-10
// 
function parseComponents(slideID) {
  var components = {
      webNumber      : '',
      courseName     : '',
      courseNumber   : '',
      programCode    : '',
      programVersion : ''
  };

  var splitString = '';

  // e.g. AD
  components.programCode = slideID.match(/^\w{2}/i);
  splitString += components.programCode;
  console.log('program code: ' + components.programCode);

  // e.g. 12
  components.programVersion = slideID.split(splitString)[1].match(/^\d{2}/i);
  splitString += components.programVersion + '-';
  console.log('program version: ' + components.programVersion);

  // e.g. 104
  components.courseNumber = slideID.split(splitString)[1].match(/^\d{3}/i);
  splitString += components.courseNumber + '-Web';
  console.log('course number: ' + components.courseNumber);

  // e.g. Web01
  components.webNumber = slideID.split(splitString)[1].match(/^\d{2,}/i);
  console.log('web number: ' + components.webNumber);

  components = verifyComponents(components);

  return components;
}

//
// verifyComponents
//
// @param components - an object generated by the parseComponents
// function that contains all of the parsed information from the
// slideID given by the user
function verifyComponents(components) {
  var return_value = components;
  for (var i = 0; i < components.length; i++) {
    if (!components[i]) {
      return_value = null;
    }
  }
  return return_value;
}

//
// addTag
//
// @param tag - a string representation of the tag to be added
function addTag(tag) {
  var $input        = '';
  var $addButton    = $('.tag-box.tag-box-selectable');
  var pressEnterKey = $.Event('keydown', { keyCode : 13 });

  $addButton.click();
  $input = $('.tags-input.tag-box.ui-autocomplete-input');

  $input.val(tag);
  $input.trigger(pressEnterKey);
}

//
// addTitle
//
// @param title - a string representation of the title to be added
function addTitle(title) {
  var $titleInput = $('.dialog input[aria-label="Title"]');
  $titleInput.val(title + ' - ');
  $titleInput.focus();
}

// MAIN
// scope this stuff
(
  function() {
    var courseInfo   = promptCourseInformation();

    if (courseInfo) {
      var tagOne, tagTwo;
      var slideID      = courseInfo.slideInfo;
      var sectionTitle = courseInfo.sectionTitle;
      var components   = parseComponents(slideID);
    }

    // Do nothing if components are null; that means the
    // data provided was invalid
    if (!components) {
      alert('That data was invalid!');
    }
    else {
      tagOne = components.programCode    +
               components.programVersion +
               '-'                       +
               components.courseNumber;

      tagTwo = 'Web' + components.webNumber + '-' + sectionTitle;

      addTag(tagOne);
      addTag(tagTwo);
      addTitle(slideID);
    }
  }
)();
